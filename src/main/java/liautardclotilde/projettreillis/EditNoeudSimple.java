/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package liautardclotilde.projettreillis;

import java.util.Arrays;
import liautardclotilde.projettreillis.Classes.Appui_Double;
import liautardclotilde.projettreillis.Classes.Appui_Simple;
import liautardclotilde.projettreillis.Classes.Noeud_Simple;
import liautardclotilde.projettreillis.Classes.Noeuds;
import static liautardclotilde.projettreillis.Edit2.getId2;
import static liautardclotilde.projettreillis.NewNoeuds.VerifListeNoeuds;
import static liautardclotilde.projettreillis.NewNoeuds.VerifListeNoeudsAppui;

/**
 *
 * @author Elève
 */
public class EditNoeudSimple extends Projet_Treillis {

    /**
     * Creates new form EditNoeuds2
     */
    public EditNoeudSimple() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Abs = new javax.swing.JTextField();
        Ord = new javax.swing.JTextField();
        Type = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EditNoeuds");

        jLabel1.setText("Abscisse");

        jLabel2.setText("Ordonne");

        Type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Noeud Simple", "Noeud Appui Simple", "Noeud Appui Double" }));

        jLabel3.setText("Type");

        jButton1.setText("Annuler");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Annuler(evt);
            }
        });

        jButton2.setText("Terminer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Terminer(evt);
            }
        });

        jButton4.setText("Modifier un Noeud Appui");
        jButton4.setToolTipText("");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditNoeudAppui(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Abs))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Type, 0, 1, Short.MAX_VALUE)
                            .addComponent(Ord))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(Abs, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ord, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Annuler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Annuler
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_Annuler

    private void Terminer(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Terminer
        // TODO add your handling code here:
        int u=0;//Variable pour Catch
        try{
            double x=Double.parseDouble(Abs.getText());
            double y=Double.parseDouble(Ord.getText());
            String typeNoeud=Type.getSelectedItem().toString();
            Noeuds noeud=new Noeud_Simple (x,y,getlisteNoeuds().size()); 
            int verif;
            u=u+1;
            //Vérification que le Noeud appartienne à la zone constructible
            if (noeud.Verification_Appartenance_TerrainN(getT())==true){
                for (int i=0;i<getlisteTT().size();i++){
                    //if (false==listeTT.get(i).verifNoeudDansTerrainSurLesBords(noeud)){ //changer new methode (Ok sur segment mais pas dedans TT)
                    //Différence par rapport au type du Noeud
                        u=u+1;
                        if ("Noeud_Simple".equals(typeNoeud)){
                            noeud=new Noeud_Simple (x,y,0);
                            System.out.println(noeud.toString());
                            u=u+3;
                            if (VerifListeNoeuds(getlisteNoeuds(),noeud)==false){
                                new Erreur5().setVisible(true);
                            }else{ 
                                for (int j=0;j<getlisteNoeuds().size();j++){
                                    if (getId2()==getlisteNoeuds().get(j).getnom()){
                                        noeud=new Noeud_Simple (x,y,getlisteNoeuds().get(j).getnom());
                                        System.out.println();
                                        System.out.println(getlisteNoeuds().get(j));
                                        System.out.println(Arrays.toString(getlisteNoeuds().toArray()));
                                        getlisteNoeuds().set(j,noeud);
                                        if (getlisteNoeuds().get(j).getClass()==Appui_Double.class){ 
                                            getlisteAD().remove(getlisteNoeuds().get(j));
                                            getlisteNS().add(getlisteNoeuds().get(j));
                                            dispose(); 
                                        }
                                        if (getlisteNoeuds().get(j).getClass()==Appui_Simple.class){ 
                                            getlisteAS().remove(getlisteNoeuds().get(j));
                                            getlisteNS().add(getlisteNoeuds().get(j));
                                            dispose(); 
                                        }
                                        if (getlisteNoeuds().get(j).getClass()==Noeud_Simple.class){ 
                                            dispose(); 
                                        }
                                    }
                                }
                            }
                        }
                
                        verif=0;
                        u=u+1;
                        if ("Appui_Double".equals(typeNoeud)){
                            //Boucle qui vérifie pour chaque triangle de Terrain créer (tableau)
                            for (int j=0;j<getlisteTT().size();j++){
                                //if (true==listeTT.get(j).verifNoeudDansTerrainSurLesBords(noeud)){ 
                                    //noeud = new Appui_Double (listeTT.get(i),listeNoeuds.size());
                                    verif=verif+1;
                                    //TT.getnom()+":("+PT1.getPx()+","+PT1.getPy()+";"+PT2.getPx()+","+PT2.getPy()+";"+PT3.getPx()+","+PT3.getPy()+")"
                                    System.out.println(noeud.toString());
                                    System.out.println(getlisteTT().get(j).toString());
                                //}
                            }   
                            if (verif==0){
                                new Erreur3().setVisible(true);
                            }
                            u=u+2;
                            if (VerifListeNoeudsAppui(getlisteNoeuds(),noeud)==false){
                                new Erreur5().setVisible(true);
                            }else{
                                for (int j=0;j<getlisteNoeuds().size();j++){
                                    if (getId2()==getlisteNoeuds().get(j).getnom()){
                                        noeud=new Appui_Double(x,getlisteNoeuds().get(j).getTT(),y,getlisteNoeuds().get(j).getnom());
                                        System.out.println();
                                        System.out.println(getlisteNoeuds().get(j));
                                        System.out.println(Arrays.toString(getlisteNoeuds().toArray()));
                                        getlisteNoeuds().set(j,noeud);
                                        if (getlisteNoeuds().get(j).getClass()==Appui_Double.class){ 
                                            dispose(); 
                                        }
                                        if (getlisteNoeuds().get(j).getClass()==Appui_Simple.class){ 
                                            getlisteAS().remove(getlisteNoeuds().get(j));
                                            getlisteAD().add(getlisteNoeuds().get(j));
                                            dispose(); 
                                        }
                                        if (getlisteNoeuds().get(j).getClass()==Noeud_Simple.class){ 
                                            getlisteNS().remove(getlisteNoeuds().get(j));
                                            getlisteAD().add(getlisteNoeuds().get(j));
                                            dispose(); 
                                        }
                                    }
                                }
                            }
                        }
            
                        verif=0;
                        u=u+1;
                        if ("Appui_Simple".equals(typeNoeud)){
                            //Boucle qui vérifie pour chaque triangle de Terrain créer (tableau)
                            for (int j=0;j<getlisteTT().size();j++){
                                //if (true==listeTT.get(j).verifNoeudDansTerrainSurLesBords(noeud)){ 
                                    //noeud = new Appui_Simple (listeTT.get(i),listeNoeuds.size()); //Probleme avec Appui Noeud
                                    verif=verif+1;
                                    System.out.println(noeud.toString());
                                    System.out.println(getlisteTT().get(j).toString());
                                //}
                            }
                            if (verif==0){
                                new Erreur3().setVisible(true);
                            }
                            u=u+1;
                            if (VerifListeNoeudsAppui(getlisteNoeuds(),noeud)==false){
                                new Erreur5().setVisible(true);
                            }else{
                                for (int j=0;j<getlisteNoeuds().size();j++){
                                    if (getId2()==getlisteNoeuds().get(j).getnom()){
                                        noeud=new Appui_Simple(x,getlisteNoeuds().get(j).getTT(),y,getlisteNoeuds().get(j).getnom());
                                        System.out.println();
                                        System.out.println(getlisteNoeuds().get(j));
                                        System.out.println(Arrays.toString(getlisteNoeuds().toArray()));
                                        getlisteNoeuds().set(j,noeud);
                                        if (getlisteNoeuds().get(j).getClass()==Appui_Double.class){
                                            getlisteAD().remove(getlisteNoeuds().get(j));
                                            getlisteAS().add(getlisteNoeuds().get(j));
                                            dispose(); 
                                        }
                                        if (getlisteNoeuds().get(j).getClass()==Appui_Simple.class){ 
                                            dispose(); 
                                        }
                                        if (getlisteNoeuds().get(j).getClass()==Noeud_Simple.class){ 
                                            getlisteNS().remove(getlisteNoeuds().get(j));
                                            getlisteAS().add(getlisteNoeuds().get(j));
                                            dispose(); 
                                        }
                                    }
                                }
                            }
                        } 
                    //}else{
                        //new Erreur14().setVisible(true); 
                    //}
                }
            }else{
                new Erreur6().setVisible(true); 
            }
        } catch (NumberFormatException e) {
            if (u==0){
                System.out.println("CATCH1");
                new Erreur2().setVisible(true); 
            }
            if (u==1){
                System.out.println("CATCH2: problème appartenance Terrain");
            }
            if (u==2){
                System.out.println("CATCH3: problème type Noeud Simple"); 
            }
            if (u==3){
                System.out.println("CATCH3: problème type Appui Double"); 
            }
            if (u==4){
                System.out.println("CATCH3: problème type Appui Simple"); 
            }
            if (u==5){
                System.out.println("CATCH4: problème verif d'un doublon, liste nulle etc"); 
            }
	}
    }//GEN-LAST:event_Terminer

    private void EditNoeudAppui(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditNoeudAppui
        // TODO add your handling code here:
        new EditNoeudAppui().setVisible(true);
        dispose();
    }//GEN-LAST:event_EditNoeudAppui

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditNoeudSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditNoeudSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditNoeudSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditNoeudSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditNoeudSimple().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Abs;
    private javax.swing.JTextField Ord;
    private javax.swing.JComboBox<String> Type;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
